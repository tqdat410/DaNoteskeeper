# ========== APPLICATION INFO ==============
spring.application.name=ai-notekeeper
spring.application.version=@project.version@
server.port=${PORT:9090}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}
app.deployment-url=${DEPLOYMENT_URL:https://danoteskeeper.tranquuocdat.com}
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:9090,http://localhost:3000,http://localhost:5173,https://danoteskeeper.tranquocdat.com}

# ========== JWT (COMMON) ==================
app.jwt.secret=${JWT_SECRET}
app.jwt.access-token-expiration=${ACCESS_TOKEN_EXPIRATION:3600000}
app.jwt.refresh-token-expiration=${REFRESH_TOKEN_EXPIRATION:2592000000}

# ========== OAUTH (COMMON) ================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# ========== EMAIL (COMMON) ===============
app.email.api-key=${RESEND_API_KEY}
app.base-url=${BASE_URL:http://localhost:9090}

# ========== FILE STORAGE ==================
app.storage.upload-dir=${UPLOAD_DIR:C:\\Users\\Admin\\Documents\\FPT\\PRM392\\assignment-source\\uploads}
app.storage.max-file-size=${MAX_FILE_SIZE:5242880}
app.storage.allowed-image-types=image/jpeg,image/jpg,image/png,image/webp
app.storage.allowed-document-types=application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain

# Spring Boot Multipart Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
spring.servlet.multipart.file-size-threshold=2MB

# ========== DATABASE (COMMON) =============
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5532}/${DB_NAME:notekeeper}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.auto-commit=false

# ========== JPA (COMMON) ==================
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:validate}
spring.jpa.show-sql=true

# ========== FLYWAY CONFIGURATION ==========
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=true

# ========== REDIS (COMMON) ================
spring.data.redis.database=0
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6479}
spring.data.redis.timeout=${REDIS_TIMEOUT:60000}
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=4
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=5000ms
spring.data.redis.ssl.enabled=false
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# ========== SWAGGER (COMMON) ===============
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.default-model-rendering=example
springdoc.swagger-ui.show-common-extensions=true
springdoc.show-actuator=true

# ========== OPENROUTER ===================
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.base-url=${OPENAI_BASE_URL:https://openrouter.ai/api}
spring.ai.openai.chat.options.model=${OPENAI_CHAT_MODEL:google/gemini-2.5-flash}
app.openai.powerful-model.name=${OPENAI_POWERFUL_MODEL_NAME:google/gemini-2.5-flash}

# ========== OLLAMA =======================
spring.ai.ollama.base-url=${OLLAMA_BASE_URL:http://localhost:11434}
spring.ai.ollama.embedding.options.model=${OLLAMA_EMBEDDING_MODEL:embeddinggemma:latest}

# ========== LOGGING (COMMON) =============
logging.level.root=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
